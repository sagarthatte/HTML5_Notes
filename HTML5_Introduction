HTM5: New Structural Elements
- Aimed towards simplicity

Improvements include:
a. new doctype definition
b. the "type" attribute for elements such as <link> and <script> are now optional
c. the syntax constraints have now been relaxed.
d. new structural elements have been added.

-- MINIMAL HTML DOCUMENT----------

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>Page Title</title>
	<link rel="stylesheet" href="style.css">
	<script src="script.js"></script>
</head>
<body>
<!-- Random content -->
</body>
</html>
------------------------------------------

- No quotes needed for most attribute values, if an attribute value is made of a single word, and is alphanumeric.
- No closing tags needed for most html elements.

--------------------------------------------------------------------

New Structural Elements
- Currently in HTML, "parts" are implemented by relying heavily on <div> and <span> with different id and attributes, as also CSS and Javascript.

Disadvantages/ Limitations of this approach:
- id and class names might differ from one developer to other, and so on.
- Even with same id and class names, css rules may be different.
- JavaScript libraries become heavier over the years.
- Web pages become code heavy as well.
- These elements can not be handled by Web browser natively.

To overcome these limitations, as also based on surveys for commonly used id's and class names all over the WWW, new elements are added to HTML5 set.

1. <header> instead of <div class="header"> -->Typically header of a web site, that appears on top of each page, or a header of a long <article> or long <section>.
2. <aside> instead of <div class="aside"> -->Section whose content is not directly related to main content surrounding it, but provides additional information.
3. <footer> --> Contains the footer of a site, a long <article> or a long <section>/
4. <nav> --> Section containing the main navigation links (within document or to other pages).
5. <article> --> Independent content, that can be individually extracted from document, and alienated, without compromising the understanding of subject. (example: Blog Post).
6. <section> --> Generic section used to group different articles for various purposes. OR to definte the different sections of single article. Generally used with a <header>
7. <time> --> Used to mark up time and dates.
8. <figure>, <figcaption> --> To encapsulate a figure as a single term, and contains a caption for figure, respectively.
9. <main> --> Represents main content of body/document/application. This area consists of content directly related to, or expands on central topic of document.There can only be one <main> element in a document.
-----------------------------------------------------------------------------------------------------------------

<Details> and <Summary> elements
- For displaying a foldable zone in an HTML Document.
- <Summary> is nested inside <Details> element, and is text for a closed piece of widget.
- Rest of content outside the <summary> tags, inside <Details> is text, when you expand widget.

- CSS Pseudo Classes for styling icon for expand/collapse the widget (STILL UNOFFICIAL, ONLY WORKS IN CHROME).
/******************************************
    summary::-webkit-details-marker {
        color:#FF0000;
        background:#FFFFFF;
    }
*****************************************/
	
/*****************************************************
    details[open] summary::-webkit-details-marker {
        color:#0000FF;
        background:#00FFFF;
    }
******************************************************/

**Adding Retro-Compatibility:
Polyfill--> Piece of JavaScript code to include in HTML page,that emulates HTML5 feautres not yet 
supported/implemented by browsers. Usually polyfills emulates feature, only on detecting no native support.

Find polyfills at:
1. http://caniuse.com
2. http://html5please.com
3. http://modernizr.com

EXAMPLE: (with <details> and <summary>)
<details> and <summary> not supported by all browsers (FF).How to use them in website --> polyfills.

--> Complete polyfill for all browsers for <details> and <summary>:
a. http://codepen.io/w3devcampus/pen/GJrQzP
b. http://codepen.io/w3devcampus/pen/NqdyJK

--------------------------------------------------------------------------------------------------
*** The <time> and <mark> elements:

<time>
	Useful for marking a time or a duration in the document
	Provides a human readable part (between <time> and </time>), and a machine readable part contained within a 		 	datetime attribute.
	Dates are expressed as YYYY-MM-DD.
	
	Machine readable part adds semantics to be used by search engines for indexing,
	Useful scenarios:
		Alerts on birthdays, automatically adding dates or events that contain <time> into a calendar.
		
The DATETIME attribute:
	Can be used for indicating a date/time or a duration.

Date/Time Values:
	Supports different specifications 'year', 'month in a year', 'week in a year', 'a time'.
	
	Examples:
			datetime="1905"					year 1905
			datetime="1905-11"				November 1905
			datetime="11-13"				November 13th of any year
			datetime="1905-W21"				Week 21 of year 1905
			datetime="1905-11-13 09:00"		Nov 13, 1905, 9am
			datetime="1905-11-13T09:00"		Same as above example.
			datetime="09:00"Z"				9:00 in the morning GMT.
			datetime="09:00-05"				9:00 in the morning, GMT minus 5 hours
			
			












